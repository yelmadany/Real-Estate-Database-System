/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package cmp320project;

import java.sql.SQLException;
import javax.swing.JOptionPane;
import java.sql.ResultSet;

/**
 *
 * @author Yo200
 */
public class AddCustomer extends javax.swing.JFrame {

    JDBCConnection con = new JDBCConnection();
    ResultSet rs;

    public AddCustomer() {
        initComponents();
         RenterPanel.setVisible(false);
         Ownerpanel.setVisible(false);
        lblIDError.setVisible(false);
        lblNameError.setVisible(false);
        lblPasswordError.setVisible(false);
        lblPhoneError.setVisible(false);
        lblIDError2.setVisible(false);
        lblNameError2.setVisible(false);
        LblPasswordError2.setVisible(false);
        lblPhoneError2.setVisible(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        Clear = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        Add = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        Renter = new javax.swing.JCheckBox();
        Owner = new javax.swing.JCheckBox();
        RenterPanel = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtPhone = new javax.swing.JTextField();
        txtPassword = new javax.swing.JPasswordField();
        txtID = new javax.swing.JTextField();
        lblNameError = new javax.swing.JLabel();
        lblPhoneError = new javax.swing.JLabel();
        lblPasswordError = new javax.swing.JLabel();
        lblIDError = new javax.swing.JLabel();
        Ownerpanel = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        txtName2 = new javax.swing.JTextField();
        lblNameError2 = new javax.swing.JLabel();
        lblPhoneError2 = new javax.swing.JLabel();
        txtPhone2 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtPassword2 = new javax.swing.JPasswordField();
        LblPasswordError2 = new javax.swing.JLabel();
        lblIDError2 = new javax.swing.JLabel();
        txtID2 = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();

        jLabel3.setText("jLabel3");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("ADD Customer");

        Clear.setText("Clear");
        Clear.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        Clear.setContentAreaFilled(false);
        Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Add New Customer");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        Add.setText("Add");
        Add.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Add.setContentAreaFilled(false);
        Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddActionPerformed(evt);
            }
        });

        jLabel5.setText("Enter Cutomer Type:::");

        Renter.setText("Renter");
        Renter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RenterActionPerformed(evt);
            }
        });

        Owner.setText("Owner");
        Owner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OwnerActionPerformed(evt);
            }
        });

        RenterPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel13.setText("Name:");

        jLabel14.setText("Phone:");

        jLabel15.setText("Password:");

        jLabel23.setText("ID:");

        txtID.setText("40000000X");
        txtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDActionPerformed(evt);
            }
        });

        lblNameError.setForeground(new java.awt.Color(255, 51, 51));
        lblNameError.setText("Error");

        lblPhoneError.setForeground(new java.awt.Color(255, 51, 51));
        lblPhoneError.setText("Error");

        lblPasswordError.setForeground(new java.awt.Color(255, 51, 51));
        lblPasswordError.setText("Error");

        lblIDError.setForeground(new java.awt.Color(255, 51, 51));
        lblIDError.setText("Error");

        javax.swing.GroupLayout RenterPanelLayout = new javax.swing.GroupLayout(RenterPanel);
        RenterPanel.setLayout(RenterPanelLayout);
        RenterPanelLayout.setHorizontalGroup(
            RenterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, RenterPanelLayout.createSequentialGroup()
                .addContainerGap(234, Short.MAX_VALUE)
                .addGroup(RenterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNameError, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPhoneError, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPasswordError, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblIDError, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15))
            .addGroup(RenterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(RenterPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(RenterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(RenterPanelLayout.createSequentialGroup()
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(RenterPanelLayout.createSequentialGroup()
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(RenterPanelLayout.createSequentialGroup()
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(RenterPanelLayout.createSequentialGroup()
                            .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap(132, Short.MAX_VALUE)))
        );
        RenterPanelLayout.setVerticalGroup(
            RenterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RenterPanelLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(lblNameError)
                .addGap(33, 33, 33)
                .addComponent(lblPhoneError)
                .addGap(18, 18, 18)
                .addComponent(lblPasswordError)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(lblIDError)
                .addGap(24, 24, 24))
            .addGroup(RenterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(RenterPanelLayout.createSequentialGroup()
                    .addGap(4, 4, 4)
                    .addGroup(RenterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(RenterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(RenterPanelLayout.createSequentialGroup()
                            .addGap(8, 8, 8)
                            .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(RenterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(RenterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        Ownerpanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel9.setText("Name:");

        txtName2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtName2ActionPerformed(evt);
            }
        });

        lblNameError2.setForeground(new java.awt.Color(255, 51, 51));
        lblNameError2.setText("Error");

        lblPhoneError2.setForeground(new java.awt.Color(255, 51, 51));
        lblPhoneError2.setText("Error");

        jLabel8.setText("Phone:");

        jLabel7.setText("Password:");

        LblPasswordError2.setForeground(new java.awt.Color(255, 51, 51));
        LblPasswordError2.setText("Error");

        lblIDError2.setForeground(new java.awt.Color(255, 51, 51));
        lblIDError2.setText("Error");

        txtID2.setText("30000000X");
        txtID2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtID2ActionPerformed(evt);
            }
        });

        jLabel22.setText("ID:");

        javax.swing.GroupLayout OwnerpanelLayout = new javax.swing.GroupLayout(Ownerpanel);
        Ownerpanel.setLayout(OwnerpanelLayout);
        OwnerpanelLayout.setHorizontalGroup(
            OwnerpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OwnerpanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(OwnerpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(OwnerpanelLayout.createSequentialGroup()
                        .addGroup(OwnerpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(OwnerpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPassword2)
                            .addComponent(txtID2, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)))
                    .addGroup(OwnerpanelLayout.createSequentialGroup()
                        .addGroup(OwnerpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(OwnerpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtName2, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)
                            .addComponent(txtPhone2))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(OwnerpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPhoneError2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(LblPasswordError2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblIDError2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(OwnerpanelLayout.createSequentialGroup()
                        .addComponent(lblNameError2, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        OwnerpanelLayout.setVerticalGroup(
            OwnerpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, OwnerpanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(OwnerpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtName2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNameError2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(OwnerpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPhone2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPhoneError2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(OwnerpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPassword2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LblPasswordError2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(OwnerpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtID2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblIDError2))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(115, 115, 115)
                .addComponent(Add, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Clear, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(100, 100, 100))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Renter)
                        .addGap(276, 276, 276)
                        .addComponent(Owner, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(99, 99, 99))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(RenterPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Ownerpanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Renter)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Owner))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(RenterPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Ownerpanel, javax.swing.GroupLayout.PREFERRED_SIZE, 185, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Add, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Clear, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearActionPerformed
        // TODO add your handling code here:
        clearInputBoxes();
    }//GEN-LAST:event_ClearActionPerformed

    private void AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddActionPerformed
        // TODO add your handling code here:
        boolean validcustomer = false;
      try {
          if(Owner.isSelected()){
          
            if (isOwnerValidData() && !isODuplicate(Integer.parseInt(txtID2.getText().trim()))) {

                String prepSQL;
                
                    
                    prepSQL = "INSERT INTO owner (owner_id, name, phone, password) VALUES ("
                        + txtID2.getText().trim() + ", "
                        + "'" + txtName2.getText().toUpperCase() + "', "
                        + "'" + txtPhone2.getText().trim() + "', '"
                        + txtPassword2.getText().trim() + "'" 
                        + ")";
                
                int result = con.executePrepared(prepSQL);
                if (result > 0) {
                    validcustomer = true;
                }
               // rs.close();
            } else if(txtID.getText().isEmpty()){
                javax.swing.JLabel label = new javax.swing.JLabel("Please fix validation errors...");
                    label.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 18));
                    JOptionPane.showMessageDialog(null, label, "ERROR", JOptionPane.ERROR_MESSAGE);
            }
            else if (!isODuplicate(Integer.parseInt(txtID.getText().trim()))) {
                    javax.swing.JLabel label = new javax.swing.JLabel("Please fix validation errors...");
                    label.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 18));
                    JOptionPane.showMessageDialog(null, label, "ERROR", JOptionPane.ERROR_MESSAGE);
                } else {
                    javax.swing.JLabel label = new javax.swing.JLabel("ID Already exists. Use a different ID.");
                    label.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 18));
                    JOptionPane.showMessageDialog(null, label, "ERROR", JOptionPane.INFORMATION_MESSAGE);
                    // check validation errors 
                }
          }
          if(Renter.isSelected()){
               if (isRenterValidData() && !isRDuplicate(Integer.parseInt(txtID.getText().trim()))) {
  
                String prepSQL;
                
                    
                    prepSQL = "INSERT INTO renter (Renter_id, name, phone, password) VALUES ("
                        + txtID.getText().trim() + ", "
                        + "'" + txtName.getText().toUpperCase() + "', "
                        + "'" + txtPhone.getText().trim() + "', '"
                        + txtPassword.getText().trim() + "'" 
                        + ")";
                
                int result = con.executePrepared(prepSQL);
                if (result > 0) {
                    validcustomer = true;
                }
                
            } else if(txtID.getText().isEmpty()){
                javax.swing.JLabel label = new javax.swing.JLabel("Please fix validation errors...");
                    label.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 18));
                    JOptionPane.showMessageDialog(null, label, "ERROR", JOptionPane.ERROR_MESSAGE);
            }
            else if (!isRDuplicate(Integer.parseInt(txtID.getText().trim()))) {
                    javax.swing.JLabel label = new javax.swing.JLabel("Please fix validation errors...");
                    label.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 18));
                    JOptionPane.showMessageDialog(null, label, "ERROR", JOptionPane.ERROR_MESSAGE);
                } else {
                    javax.swing.JLabel label = new javax.swing.JLabel("ID Already exists. Use a different ID.");
                    label.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 18));
                    JOptionPane.showMessageDialog(null, label, "ERROR", JOptionPane.INFORMATION_MESSAGE);
                    // check validation errors 
                }
          }
          rs.close();
          if(validcustomer){
              javax.swing.JLabel label = new javax.swing.JLabel("New Customer added successfully.");
              label.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 18));
              JOptionPane.showMessageDialog(null, label, "SUCCESS", JOptionPane.INFORMATION_MESSAGE);
              clearInputBoxes();
          }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error adding new employee.");
        }
        
        
    }//GEN-LAST:event_AddActionPerformed

    private void RenterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RenterActionPerformed
        // TODO add your handling code here:
        if(Renter.isSelected()){
            RenterPanel.setVisible(true);
        }
        else RenterPanel.setVisible(false);
    }//GEN-LAST:event_RenterActionPerformed

    private void OwnerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OwnerActionPerformed
        // TODO add your handling code here:
                if(Owner.isSelected()){
            Ownerpanel.setVisible(true);
          } 
                else Ownerpanel.setVisible(false);
                    
    }//GEN-LAST:event_OwnerActionPerformed

    private void txtName2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtName2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtName2ActionPerformed

    private void txtID2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtID2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtID2ActionPerformed

    private void txtIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDActionPerformed

     void clearInputBoxes()
    {
        //txtID.setText("");
        txtName.setText("");
        txtPhone.setText("");
        txtPassword.setText("");
        //txtID2.setText("");
        txtName2.setText("");
        txtPhone2.setText("");
        txtPassword2.setText("");
    }
    
    
    boolean isODuplicate(int owner_id) throws SQLException
    {
        boolean isduplicate = false;
        String stmtSQL = "SELECT owner_id FROM owner WHERE owner_id = " + owner_id;
        rs = con.executeStatement(stmtSQL);
        // isBeforeFirst() returns false if there are no data in the resultset
        isduplicate = rs.isBeforeFirst();

        return isduplicate;
    }
    
    boolean isRDuplicate(int renter_id) throws SQLException
    {
        boolean isduplicate = false;
        String stmtSQL = "SELECT renter_id FROM renter WHERE renter_id = " + renter_id;
        rs = con.executeStatement(stmtSQL);
        // isBeforeFirst() returns false if there are no data in the resultset
        isduplicate = rs.isBeforeFirst();

        return isduplicate;
    }
    
    boolean isOwnerValidData()
    {
        boolean result = true;
        
        if (txtID2.getText().trim().isEmpty() || !isInteger(txtID2.getText().trim())) {
            if (txtID2.getText().trim().isEmpty()) {
                lblIDError2.setText("Invalid. Cannot be empty.");
            } else if (!isInteger(txtID2.getText().trim())) {
                lblIDError2.setText("Invalid. Must be integer.");
            }
            lblIDError2.setVisible(true);
            result = false;
        }
        
        if (txtName2.getText().trim().isEmpty() || (txtName2.getText().trim().length() > 20)) {
            if (txtName2.getText().trim().isEmpty()) {
                lblNameError2.setText("Invalid. Cannot be empty.");
            } else if ((txtName2.getText().trim().length() > 20)) {
                lblNameError2.setText("Invalid. Must be < 20 chars.");
            }
            lblNameError2.setVisible(true);
            result = false;
        }
        
        if (txtPassword2.getText().trim().isEmpty() || txtPassword2.getText().trim().length() > 16) {
            if (txtPassword2.getText().trim().isEmpty()) {
                LblPasswordError2.setText("Invalid. Cannot be empty.");
            } else if (txtPassword2.getText().trim().length() > 16) {
                LblPasswordError2.setText("Invalid. Must be < 16 chars.");
            }
            LblPasswordError2.setVisible(true);
            result = false;
        }
        if (txtPhone2.getText().trim().isEmpty() || !isInteger(txtPhone2.getText().trim())) {
            if (txtPhone2.getText().trim().isEmpty()) {
                lblPhoneError2.setText("Invalid. Cannot be empty.");
            } else if (!isInteger(txtPhone2.getText().trim())) {
                lblPhoneError2.setText("Invalid. Must be integer.");
            }
           lblPhoneError2.setVisible(true);
            result = false;
        }
        return result;
    }
    boolean isRenterValidData()
    {
        boolean result = true;
        
        if (txtID.getText().trim().isEmpty() || !isInteger(txtID.getText().trim())) {
            if (txtID.getText().trim().isEmpty()) {
                lblIDError.setText("Invalid. Cannot be empty.");
            } else if (!isInteger(txtID.getText().trim())) {
                lblIDError.setText("Invalid. Must be integer.");
            }
            lblIDError.setVisible(true);
            result = false;
        }
        
        if (txtName.getText().trim().isEmpty() || (txtName.getText().trim().length() > 20)) {
            if (txtName.getText().trim().isEmpty()) {
                lblNameError.setText("Invalid. Cannot be empty.");
            } else if ((txtName.getText().trim().length() > 20)) {
                lblNameError.setText("Invalid. Must be < 20 chars.");
            }
            lblNameError.setVisible(true);
            result = false;
        }
        
        
        if (txtPassword.getText().trim().isEmpty() || txtPassword.getText().trim().length() > 16) {
            if (txtPassword.getText().trim().isEmpty()) {
                lblPasswordError.setText("Invalid. Cannot be empty.");
            } else if (txtPassword.getText().trim().length() > 16) {
                lblPasswordError.setText("Invalid. Must be < 16 chars.");
            }
            lblPasswordError.setVisible(true);
            result = false;
        }       
        if (txtPhone.getText().trim().isEmpty() || !isInteger(txtPhone.getText().trim())) {
            if (txtPhone.getText().trim().isEmpty()) {
                lblPhoneError.setText("Invalid. Cannot be empty.");
            } else if (!isInteger(txtPhone2.getText().trim())) {
                lblPhoneError.setText("Invalid. Must be integer.");
            }
           lblPhoneError.setVisible(true);
            result = false;
        }
        
        
        return result;
        
    }
    public boolean isInteger(String s) {
        try {
            Integer.parseInt(s);
            return true;
        } catch (NumberFormatException ex) {
            return false;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add;
    private javax.swing.JButton Clear;
    private javax.swing.JLabel LblPasswordError2;
    private javax.swing.JCheckBox Owner;
    private javax.swing.JPanel Ownerpanel;
    private javax.swing.JCheckBox Renter;
    private javax.swing.JPanel RenterPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel lblIDError;
    private javax.swing.JLabel lblIDError2;
    private javax.swing.JLabel lblNameError;
    private javax.swing.JLabel lblNameError2;
    private javax.swing.JLabel lblPasswordError;
    private javax.swing.JLabel lblPhoneError;
    private javax.swing.JLabel lblPhoneError2;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtID2;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtName2;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JPasswordField txtPassword2;
    private javax.swing.JTextField txtPhone;
    private javax.swing.JTextField txtPhone2;
    // End of variables declaration//GEN-END:variables
}
